<?php
//==============================================================================
// Stripe Payment Gateway Pro v2024-6-24
// 
// Author: Clear Thinking, LLC
// E-mail: johnathan@getclearthinking.com
// Website: http://www.getclearthinking.com
// 
// All code within this file is copyright Clear Thinking, LLC.
// You may not copy or reuse code within this file without written permission.
//==============================================================================
?>

<?php if (!empty($settings['instructions_' . $language])) { ?>
	<div id="payment-instructions"><?php echo html_entity_decode($settings['instructions_' . $language], ENT_QUOTES, 'UTF-8'); ?></div><br>
<?php } ?>

<?php if ($use_stripe_checkout) { ?>
	
	<?php if (!empty($settings['additional_css'])) { ?>
		<style type="text/css">
			<?php echo $settings['additional_css']; ?>
		</style>
	<?php } ?>
	
	<div id="payment">use stripe checkout</div>
	
	<script>
		function confirmOrder() {
			$.ajax({
				type: 'POST',
				url: 'index.php?route=<?php echo $settings['extension_route']; ?>/createCheckoutSession',
				data: {},
				beforeSend: function() {
					displayWait('<?php echo addslashes(html_entity_decode($settings['text_please_wait_' . $language], ENT_QUOTES, 'UTF-8')); ?>');
				},
				dataType: 'json',
				success: function(json) {
					if (json.error_message) {
						displayError(json.error_message);
					} else {
						$.getScript('https://js.stripe.com/v3', function() {
							var stripe = Stripe(json.key, {stripeAccount: json.account_id});
							
							stripe.redirectToCheckout({
								sessionId: json.session_id,
							}).then(function(result) {
								console.log(result.error.message);
								alert(result.error.message);
							});
						});
					}
				},
				error: function(xhr, status, error) {
					alert(xhr.responseText ? xhr.responseText : error);
				}
			});
		}
	</script>
	
<?php } else { ?>
	
	<style type="text/css">
	 	/* Journal fixes */
		#content .payment-stripe {
			display: block !important;
		}
		.popup-checkout-payment .popup-container {
			min-width: 360px !important;
			width: 60% !important;
		}
		/* end */
		#payment {
			display: block;
			padding: 25px;
		}
		.alert {
			margin-top: 10px;
		}
		.buttons {
			border: none;
			margin: 10px 0;
			text-align: right;
		}
		@media (max-width: 767px) {
			#payment {
				padding: 10px;
			}
		}
		<?php echo $settings['additional_css']; ?>
	</style>

	<form id="payment" class="form-horizontal">
		<div class="row text-center justify-content-center">
			<div class="col-10 mb-2">
				<img src="image/stores/3rdpartylogo/stripe_poweredby_large.svg" alt="Stripe" title="Stripe" class="img-fluid" />
			</div>
		</div>
		<div id="payment-element"></div>
	</form>
	
	<script>
		var stripe;
		var elements;
		var paymentElement;
		
		$.getScript('https://js.stripe.com/v3/', function(data) {
			stripe = Stripe('<?php echo $settings[$settings['transaction_mode'] . '_publishable_key']; ?>', {betas: ['server_side_confirmation_beta_1', 'link_default_integration_beta_1'], stripeAccount: '<?php echo $settings['account_id']; ?>', apiVersion: '2022-08-01;server_side_confirmation_beta=v1'});
			
			elements = stripe.elements({
				appearance: {
					theme: '<?php echo $settings['theme']; ?>',
					labels: '<?php echo $settings['theme_labels']; ?>',
					variables: {
						<?php echo $settings['theme_variables']; ?>
					},
					rules: {
						<?php echo $settings['theme_rules']; ?>
					},
				},
				clientSecret: '<?php echo (!empty($payment_intent['client_secret'])) ? $payment_intent['client_secret'] : ''; ?>',
				loader: 'always',
				locale: '<?php echo (substr($language, 0, 2) == 'zh') ? $language : substr($language, 0, 2); ?>',
			});
			
			paymentElement = elements.create('payment', {
				layout: {
					type: '<?php echo ($settings['payment_form_style'] == 'tabs') ? 'tabs' : 'accordion'; ?>',
					defaultCollapsed: <?php echo ($settings['payment_form_default'] == 'collapsed') ? 'true' : 'false'; ?>,
					radios: <?php echo (strpos($settings['payment_form_style'], 'radio')) ? 'true' : 'false'; ?>,
					spacedAccordionItems: <?php echo ($settings['accordion_space_choices']) ? 'true' : 'false'; ?>,
				},
				defaultValues: {
					card: {
						network: ['cartes_bancaires', 'mastercard', 'visa'],
					},
					billingDetails: {
						email: '<?php echo $order_info['email']; ?>',
						name: '<?php echo $order_info['firstname'] . ' ' . $order_info['lastname']; ?>',
						phone: '<?php echo $order_info['telephone']; ?>',
						address: {
							line1: '<?php echo $order_info['payment_address_1']; ?>',
							line2: '<?php echo $order_info['payment_address_2']; ?>',
							city: '<?php echo $order_info['payment_city']; ?>',
							state: '<?php echo $order_info['payment_zone']; ?>',
							country: '<?php echo $order_info['payment_iso_code_2']; ?>',
							postal_code: '<?php echo $order_info['payment_postcode']; ?>',
						},
					},
				},
				/*
				fields: {
					billingDetails: {
						address: {
							country: 'never',
						},
					},
				},
				*/
			});
			
			paymentElement.mount('#payment-element');
		});
		
		function confirmOrder() {
			$.ajax({
				type: 'POST',
				url: 'index.php?route=<?php echo $settings['extension_route']; ?>/updatePaymentIntent',
				data: {},
				dataType: 'json',
				beforeSend: function() {
					displayWait('<?php echo addslashes(html_entity_decode($settings['text_validating_payment_info_' . $language], ENT_QUOTES, 'UTF-8')); ?>');
				},
				success: function(json) {
					if (json.error_message) {
						console.log('confirmOrder: ' + json.error_message);
						displayError(json.error_message);
					} else {
						stripe.updatePaymentIntent({
							elements,
							params: {
								payment_method_data: {
									billing_details: json.billing,
								},
								shipping: json.shipping,
							}
						}).then(function(result) {
							if (result.error) {
								console.log(result.error);
								displayError(result.error.message);
							} else {
								confirmPaymentIntent();
							}
						});
					}
				},
				error: function(xhr, status, error) {
					displayError(xhr.responseText ? xhr.responseText : error);
				}
			});
		}
		
		function confirmPaymentIntent() {
			$.ajax({
				type: 'POST',
				url: 'index.php?route=<?php echo $settings['extension_route']; ?>/confirmPaymentIntent',
				data: {},
				dataType: 'json',
				beforeSend: function() {
					displayWait('<?php echo addslashes(html_entity_decode($settings['text_processing_payment_' . $language], ENT_QUOTES, 'UTF-8')); ?>');
				},
				success: function(json) {
					if (json.error_message) {
						console.log('confirmPaymentIntent: ' + json.error_message);
						displayError(json.error_message);
					} else if (json.status == 'requires_action') {
						if (json.payment_type == 'card') {
							stripe.confirmCardPayment(json.client_secret).then(function(result) {
								if (result.error) {
									console.log(result.error);
									displayError(result.error.message);
								} else {
									finalizePayment();
								}
							});
						} else {
							stripe.handleNextAction({
								clientSecret: json.client_secret,
							}).then(function(result) {
								if (result.error) {
									console.log(result.error);
									displayError(result.error.message);
								} else {
									finalizePayment();
								}
							});
						}
					} else {
						finalizePayment();
					}
				},
				error: function(xhr, status, error) {
					displayError(xhr.responseText ? xhr.responseText : error);
				}
			});
		}
		
		function finalizePayment() {
			$.ajax({
				type: 'POST',
				url: 'index.php?route=<?php echo $settings['extension_route']; ?>/finalizePayment',
				data: {},
				dataType: 'json',
				beforeSend: function() {
					displayWait('<?php echo addslashes(html_entity_decode($settings['text_finalizing_order_' . $language], ENT_QUOTES, 'UTF-8')); ?>');
				},
				success: function(json) {
					if (json.error_message) {
						console.log('finalizePayment: ' + json.error_message);
						displayError(json.error_message);
					} else if (json.client_secret) {
						stripe.confirmCardPayment(json.client_secret).then(function(result) {
							if (result.error) {
								console.log(result.error);
								displayError(result.error.message);
							} else {
								completeOrder();
							}
						});
					} else {
						completeOrder();
					}
				},
				error: function(xhr, status, error) {
					displayError(xhr.responseText ? xhr.responseText : error);
				}
			});
		}
		
		function completeOrder() {
			$.ajax({
				type: 'POST',
				url: 'index.php?route=<?php echo $settings['extension_route']; ?>/completeOrder',
				data: {},
				success: function(error) {
					console.log(error);
					if (error.trim()) {
						completeWithError(error.trim());
					} else {
						location = '<?php echo $checkout_success_url; ?>';
					}
				},
				error: function(xhr, status, error) {
					completeWithError(xhr.responseText ? xhr.responseText : error);
				}
			});
		}
		
		function completeWithError(errorMessage) {
			$.ajax({
				type: 'POST',
				url: 'index.php?route=<?php echo $settings['extension_route']; ?>/completeWithError',
				data: {error_message: errorMessage},
				success: function(error) {
					console.log(error);
					if (error.trim()) {
						triggerFatalError(error);
					} else {
						location = '<?php echo $checkout_success_url; ?>';
					}
				},
				error: function(xhr, status, error) {
					triggerFatalError(xhr.responseText ? xhr.responseText : error);
				}
			});
		}
		
		function triggerFatalError(errorMessage) {
			$('.alert').remove();
			$('#payment').after('<div class="warning alert alert-danger"><i class="fa fa-exclamation-triangle"></i> <strong>Error:</strong> The system encountered a fatal error when trying to complete your order. Please do not resubmit your order. Instead, please <a target="_blank" href="index.php?route=information/contact">contact the store administrator</a> with your order number (#<?php echo $order_info['order_id']; ?>) and the following error message:<br><br>"' + errorMessage.trim() + '"</div>');
		}
	</script>
	
<?php } ?>


<div id="payment-buttons" class="d-grid gap-2 col-12 mx-auto">
	<button id="button-confirm" onclick="confirmOrder()" class="btn btn-success btn-lg btn-block">
		Confirm Order
	</button>
</div>

<script>
	// Common functions
	<?php if ($settings['transaction_mode'] == 'live') { ?>
		if (window.location.protocol != 'https:') {
			displayError('You are in LIVE mode but are not on a secure (https) connection! Payment info is not secure!');
		}
	<?php } ?>
	
	<?php if ($error) { ?>
		displayError('<?php echo addslashes($error); ?>');
	<?php } ?>
	
	function displayWait(message) {
		$('#button-confirm').removeAttr('onclick').attr('disabled', 'disabled');
		$('#card-select').attr('disabled', 'disabled');
		$('.alert').remove();
		$('#payment').before('<div class="alert alert-warning" style="display: none"><i class="fa fa-spinner fa-spin"></i> &nbsp; ' + message.trim() + '</div>');
		$('.alert-warning').fadeIn();
	}
	
	function displayError(message) {
		// Journal fixes
		if (typeof triggerLoadingOff == 'function') triggerLoadingOff();
		$('.journal-loading-overlay').remove();
		// end
		$('.alert').remove();
		$('#button-confirm').attr('onclick', 'confirmOrder()').removeAttr('disabled');
		$('#card-select').removeAttr('disabled');
		if (message) {
			$('#payment').after('<div class="alert alert-danger" style="display: none"><i class="fa fa-exclamation-triangle"></i> &nbsp; ' + message.trim() + '</div>');
			$('.alert-danger').fadeIn();
		}
	}
</script>
